<Window x:Name="MainWindowManager" x:Class="ModManagerWPF.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:ModManagerWPF"
		mc:Ignorable="d"
		Title="SADX Mod Manager"
		MinHeight="550" MinWidth="590" Height="652" Width="620" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Languages/en-EN.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F0F0F0" Offset="0.0"/>
                <GradientStop Color="#E5E5E5" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.Static.Border" Color="#ACACAC"/>
            <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#ECF4FC" Offset="0.0"/>
                <GradientStop Color="#DCECFC" Offset="1.0"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#7EB4EA"/>
            <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF"/>
            <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#F0F0F0"/>
            <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#D9D9D9"/>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="{DynamicResource MainBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="6,2,6,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Margin="0">
                                    <Border x:Name="innerBorder" Background="{StaticResource TabItem.Selected.Background}" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Margin="-1" Opacity="0"/>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                    <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                        <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                    <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                    <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                    <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <!--This is the initial grid used by the entire app.-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Tab Container for the Manager's main elements.-->
        <TabControl x:Name="tcMain" Background="Transparent">

            <!--This Tab is for Mods.-->
            <TabItem x:Name="tabMain" Header="{DynamicResource MainTabMods}">
                <!--Main Grid for Mods Tab-->
                <Grid x:Name="GridModList">

                    <!--This Grid manages the Mods list.-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="50"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="69*"/>
                            <ColumnDefinition Width="41*"/>
                            <ColumnDefinition Width="54"/>
                        </Grid.ColumnDefinitions>
                        <ListView x:Name="listMods" Foreground="White" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2">
                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>
                                        <GridViewColumn x:Name="modNameColumn" Header="{DynamicResource ModsListName}" Width="150">

                                        </GridViewColumn>
                                        <GridViewColumn x:Name="modAuthorColumn" Header="{DynamicResource ModsListAuthor}" Width="120">

                                        </GridViewColumn>
                                        <GridViewColumn Header="{DynamicResource ModsListVersion}" Width="60">

                                        </GridViewColumn>
                                        <GridViewColumn Header="{DynamicResource ModsListCategory}" Width="80">

                                        </GridViewColumn>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </Grid>

                    <!--This Grid manages the Mods List Up/Down Buttons.-->
                    <Grid HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="30"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <Button x:Name="btnMoveTop" Content="T" HorizontalAlignment="Right" VerticalAlignment="Top" Height="30" Width="30" Grid.Row="1"/>
                        <Button x:Name="btnMoveUp" Content="U" HorizontalAlignment="Right" VerticalAlignment="Top" Height="30" Width="30" Grid.Row="3"/>
                        <Button x:Name="btnMoveDown" Content="D" HorizontalAlignment="Right" VerticalAlignment="Top" Height="30" Width="30" Grid.Row="5"/>
                        <Button x:Name="btnMoveBottom" Content="B" HorizontalAlignment="Right" VerticalAlignment="Top" Height="30" Width="30" Grid.Row="7"/>
                    </Grid>

                    <!--This Grid manages the Refresh and Config Buttons.-->
                    <Grid VerticalAlignment="Bottom" Height="50">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="10"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="RefreshBtn" Content="{DynamicResource ModsBtnRefresh}" Grid.Column="1" Margin="0,10,0,10" />
                        <Button x:Name="ConfigureModBtn" Content="{DynamicResource ModsBtnConfigure}" Grid.Column="3" Margin="0,10,0,10" />
                    </Grid>

                    <!--This Grid manages the New Mod Button.-->
                    <Grid VerticalAlignment="Bottom" Height="50" HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="54"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="NewModBtn" Content="{DynamicResource ModsBtnNew}" Grid.Column="0" Margin="0,10,0,10"/>
                    </Grid>
                </Grid>
            </TabItem>

            <!--This Tab is for Codes.-->
            <TabItem x:Name="tbCodes" Header="{DynamicResource MainTabCodes}" Margin="3,0,-3,0">
                <Grid Background="{DynamicResource MainBackgroundBrush}"/>
            </TabItem>

            <!--This Tab is for Game Configuration.-->
            <TabItem x:Name="tabGame" Header="{DynamicResource MainTabGameConfig}" Margin="6,0,-6,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="42*"/>
                        <ColumnDefinition Width="265*"/>
                    </Grid.ColumnDefinitions>
                    <TabControl x:Name="tcGame" Grid.ColumnSpan="2" Margin="0,0,0,80">
                        <TabItem x:Name="tabGraphics" Header="{DynamicResource GameTabGraphics}">
                            <Grid/>
                        </TabItem>
                        <TabItem x:Name="tabInput" Header="{DynamicResource GameTabInput}">
                            <Grid/>
                        </TabItem>
                        <TabItem x:Name="tabSound" Header="{DynamicResource GameTabSound}">
                            <Grid/>
                        </TabItem>
                        <TabItem x:Name="tabPatches" Header="{DynamicResource GameTabPatches}">
                            <Grid/>
                        </TabItem>
                        <TabItem x:Name="tabDebug" Header="{DynamicResource GameTabDebug}">
                            <Grid/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>

            <!--This Tab is for Manager Configuration.-->
            <TabItem x:Name="tabConfig" Header="{DynamicResource MainTabManagerConfig}" Margin="9,0,-9,0">

                <!--Main Grid for the Manager Config Tab.-->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="0"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                    </Grid.RowDefinitions>

                    <!--Group Box for Update Configuration-->
                    <GroupBox x:Name="grpManUpdates" Grid.Column="1" Grid.Row="1" Header="{DynamicResource ManagerGrpUpdates}"  VerticalAlignment="Top" Height="Auto" >
                        <Grid>
                            <!--Update Check Boxes-->
                            <Grid Margin="5,5,5,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="5"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <CheckBox x:Name="chkUpdatesML" Content="{DynamicResource ManagerChkCheckModloader}" Grid.Column="1" Grid.Row="0" VerticalAlignment="Top"/>
                                <CheckBox x:Name="chkUpdatesMods" Content="{DynamicResource ManagerChkCheckMods}" Grid.Column="1" Grid.Row="2" VerticalAlignment="Top"/>
                            </Grid>

                            <!--Update Buttons-->
                            <Grid HorizontalAlignment="Right" Margin="5,5,5,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="btnCheckUpdates" Content="{DynamicResource ManagerBtnCheckNow}" Grid.Column="0"/>
                            </Grid>
                        </Grid>
                    </GroupBox>

                    <!--Group Box for Manager Configuration-->
                    <GroupBox x:Name="grpManSettings" Grid.Column="1" Grid.Row="3" Header="{DynamicResource ManagerGrpOptions}" VerticalAlignment="Top" Height="Auto">
                        <Grid>
                            <!--Left Side Manager Options.-->
                            <Grid Margin="5,5,5,5">
                                <Grid.ColumnDefinitions>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Label x:Name="lblTheme" Content="{DynamicResource ManagerLblTheme}" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label x:Name="lblLanguage" Content="{DynamicResource ManagerLblLang}" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Label x:Name="lblProfile" Content="{DynamicResource ManagerLblProfile}" Grid.Row="4" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                <Button x:Name="btnOneClick" Content="{DynamicResource ManagerBtnOneClick}" Grid.Row="6" HorizontalAlignment="Left" VerticalAlignment="Top" Width="150"/>
                            </Grid>

                            <!--Right Side Manager Options-->
                            <Grid HorizontalAlignment="Right" Margin="5,5,5,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="265"/>
                                    <ColumnDefinition Width="10"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="10"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <ComboBox x:Name="comboThemes" Grid.Row="0" VerticalAlignment="Bottom" Margin="0,0,0,10" Grid.RowSpan="2" SelectionChanged="comboThemes_SelectionChanged"/>
                                <ComboBox x:Name="comboLanguage" Grid.Row="2" VerticalAlignment="Center" SelectionChanged="comboLanguage_SelectionChanged"/>
                                <ComboBox x:Name="comboProfile" Grid.Row="4" Margin="0,0,35,0" VerticalAlignment="Center" />
                                <Button x:Name="btnProfileSettings" Grid.Row="4" Content="S" Margin="238,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="22" Width="27" />
                            </Grid>
                        </Grid>
                    </GroupBox>
                </Grid>
            </TabItem>

        </TabControl>

        <!--This Grid manages the Save, Play, and Install buttons at the bottom of the app.-->
        <Grid Grid.Row="1"  Background="{DynamicResource MainDialogBottomBrush}">

            <!--This Gris manages the Save and Play Buttons.-->
            <Grid x:Name="bottomGrid" VerticalAlignment="Center" Height="60">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="160"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="SaveAndPlayButton"  Content="{DynamicResource MainBtnSaveAndPlay}"  MaxHeight="30" Grid.Column="1"/>
                <Button x:Name="SaveButton" Content="{DynamicResource MainBtnSave}" MaxHeight="30" Grid.Column="3"/>
            </Grid>

            <!--This Grid manages the Install Loader Button.-->
            <Grid HorizontalAlignment="Right" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="170"/>
                    <ColumnDefinition Width="10"/>
                </Grid.ColumnDefinitions>
                <Button x:Name="InstallLoaderBtn" Content="{DynamicResource MainBtnInstallLoader}" MaxHeight="30" />
            </Grid>
        </Grid>

    </Grid>

</Window>
